{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","game","default","serializable","getPlayerDistance","playerPos","player","getPosition","dist","pDistance","node","position","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBAAY,CAjBJ;AAkBR;AACAC,cAAM;AACFC,qBAAS,IADP;AAEFC,0BAAc;AAFZ;AAnBE,KAHP;;AA4BL;;AAEA;AACAC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKJ,IAAL,CAAUK,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOb,GAAGc,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCN,SAAjC,CAAX;AACA,eAAOG,IAAP;AACH,KArCI;;AAuCLI,cAAU,oBAAY;AAClB;AACA,aAAKX,IAAL,CAAUY,YAAV;AACA;AACA,aAAKZ,IAAL,CAAUa,SAAV;AACA;AACA,aAAKJ,IAAL,CAAUK,OAAV;AACH,KA9CI;;AAgDLC,SAhDK,mBAgDI,CAER,CAlDI;;AAmDLC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKd,iBAAL,KAA2B,KAAKJ,UAApC,EAAgD;AAC5C;AACA,iBAAKY,QAAL;AACA;AACH;AACD;AACA,YAAIO,eAAe,IAAI,KAAKlB,IAAL,CAAUmB,KAAV,GAAkB,KAAKnB,IAAL,CAAUoB,YAAnD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKZ,IAAL,CAAUa,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;;AAED;AAhEK,CAAT","file":"star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        // ���Ǻ�����֮��ľ���С�������ֵʱ���ͻ�����ռ�\r\n        pickRadius: 0,\r\n        // �ݴ� Game ���������\r\n        game: {\r\n            default: null,\r\n            serializable: false\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    getPlayerDistance: function () {\r\n        // ���� player �ڵ�λ���жϾ���\r\n        var playerPos = this.game.player.getPosition();\r\n        // ��������λ�ü�������֮�����\r\n        var dist = cc.pDistance(this.node.position, playerPos);\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function () {\r\n        // �����Ǳ��ռ�ʱ������ Game �ű��еĽӿڣ�����һ���µ�����\r\n        this.game.spawnNewStar();\r\n        // ���� Game �ű��ĵ÷ַ���\r\n        this.game.gainScore();\r\n        // Ȼ�����ٵ�ǰ���ǽڵ�\r\n        this.node.destroy();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    update: function (dt) {\r\n        // ÿ֡�жϺ�����֮��ľ����Ƿ�С���ռ�����\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // �����ռ���Ϊ\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        // ���� Game �ű��еļ�ʱ���������ǵ�͸����\r\n        var opacityRatio = 1 - this.game.timer / this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}